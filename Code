<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Datos Econ√≥micos üá¶üá∑</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <style>
    body {
      font-family: "Segoe UI", sans-serif;
      background: #f4f4f4;
      color: #222;
      margin: 0;
      padding: 15px;
      display: flex;
      flex-direction: column;
      align-items: center;
    }
    h1 {
      color: #00695c;
      text-align: center;
      margin: 10px 0;
    }
    .container {
      width: 95%;
      max-width: 600px;
    }
    .card {
      background: white;
      border-radius: 12px;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      margin: 12px 0;
      padding: 15px;
    }
    .label {
      font-weight: bold;
      color: #004d40;
    }
    .valor {
      font-size: 1.2em;
      margin-top: 5px;
    }
    #lastUpdate {
      text-align: center;
      color: #777;
      font-size: 0.9em;
      margin: 10px 0 20px 0;
    }
    canvas {
      width: 100% !important;
      height: 260px !important;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>Datos Econ√≥micos en Vivo üá¶üá∑</h1>

    <div class="card">
      <div class="label">üíµ D√≥lar Oficial</div>
      <div class="valor" id="dolarOficial">Cargando...</div>
    </div>

    <div class="card">
      <div class="label">üí∏ D√≥lar Blue</div>
      <div class="valor" id="dolarBlue">Cargando...</div>
    </div>

    <div class="card">
      <div class="label">üìà Riesgo Pa√≠s</div>
      <div class="valor" id="riesgoPais">Cargando...</div>
    </div>

    <div class="card">
      <div class="label">üè¶ S&P Merval</div>
      <div class="valor" id="merval">Cargando...</div>
    </div>

    <div id="lastUpdate">√öltima actualizaci√≥n: ‚Äî</div>

    <div class="card">
      <div class="label">üìä Evoluci√≥n Real del D√≥lar Blue (√∫ltimos d√≠as)</div>
      <canvas id="graficoBlue"></canvas>
    </div>
  </div>

  <script>
    const ctx = document.getElementById('graficoBlue').getContext('2d');
    let grafico;

    async function actualizarDatos() {
      try {
        // 1Ô∏è‚É£ Cotizaciones actuales desde Bluelytics
        const res = await fetch('https://api.bluelytics.com.ar/v2/latest');
        const data = await res.json();

        document.getElementById("dolarOficial").textContent =
          `Compra: $${data.oficial.value_buy} | Venta: $${data.oficial.value_sell}`;
        document.getElementById("dolarBlue").textContent =
          `Compra: $${data.blue.value_buy} | Venta: $${data.blue.value_sell}`;

        // 2Ô∏è‚É£ Riesgo pa√≠s y Merval (desde dolarapi)
        const [resRiesgo, resMerval] = await Promise.all([
          fetch('https://dolarapi.com/v1/otros/riesgo_pais'),
          fetch('https://dolarapi.com/v1/otros/indices')
        ]);
        const riesgo = await resRiesgo.json();
        const indices = await resMerval.json();
        const merval = indices.find(i => i.nombre.toLowerCase().includes('merval'));

        document.getElementById("riesgoPais").textContent = `${riesgo.valor} puntos`;
        document.getElementById("merval").textContent = `${merval.valor} puntos`;

        // 3Ô∏è‚É£ Fecha de actualizaci√≥n
        const ahora = new Date();
        document.getElementById("lastUpdate").textContent =
          "√öltima actualizaci√≥n: " + ahora.toLocaleString("es-AR");

        // 4Ô∏è‚É£ Hist√≥rico real del d√≥lar blue
        const resHist = await fetch('https://api.bluelytics.com.ar/v2/evolution.json');
        const hist = await resHist.json();
        const ultimos = hist.slice(-15); // √∫ltimos 15 d√≠as

        const labels = ultimos.map(d => new Date(d.date).toLocaleDateString("es-AR"));
        const valores = ultimos.map(d => d.blue.value_sell);

        if (grafico) grafico.destroy();
        grafico = new Chart(ctx, {
          type: 'line',
          data: {
            labels,
            datasets: [{
              label: 'Venta D√≥lar Blue',
              data: valores,
              borderColor: '#00796b',
              backgroundColor: 'rgba(0,150,136,0.1)',
              fill: true,
              tension: 0.3,
              pointRadius: 3
            }]
          },
          options: {
            responsive: true,
            scales: { y: { beginAtZero: false } },
            plugins: { legend: { display: false } }
          }
        });
      } catch (e) {
        console.error("Error al obtener datos:", e);
      }
    }

    actualizarDatos();
    setInterval(actualizarDatos, 3600000); // cada hora
  </script>
</body>
</html>
